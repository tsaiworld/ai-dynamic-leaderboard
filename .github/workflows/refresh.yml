name: Refresh AI Dashboard

on:
  schedule:
    - cron: '0 18 * * *'  # 08:00 America/Chicago
  workflow_dispatch:

# Ensure GITHUB_TOKEN has the scopes we need
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser python-dateutil

      - name: Update AI news
        run: python scripts/get_ai_news.py

      - name: Recompute leaderboard
        run: python scripts/update_leaderboard.py

      - name: Commit JSON update (if changed)
        uses: EndBug/add-and-commit@v9
        with:
          message: "chore: 8am CT dashboard refresh (news + leaderboard)"
          add: "data/ai_dashboard.json"

      # If nothing changed, still create a commit so Pages will rebuild
      - name: Force rebuild if no diff
        run: |
          if git diff --quiet HEAD^ HEAD 2>/dev/null; then
            echo "No data change; creating empty commit to trigger Pages build."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit --allow-empty -m "chore: trigger pages rebuild (no data changes)"
            git push
          else
            echo "Changes committed; no empty commit needed."
          fi

      - name: Trigger GitHub Pages rebuild (explicit) & show response
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Calling Pages rebuild API for ${GH_REPO}..."
          http_status=$(curl -sS -o resp.json -w "%{http_code}" \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "User-Agent: github-actions" \
            https://api.github.com/repos/${GH_REPO}/pages/builds)
          echo "HTTP Status: $http_status"
          echo "Response body:"
          cat resp.json || true
          if [ "${http_status}" -lt 200 ] || [ "${http_status}" -ge 300 ]; then
            echo "Pages rebuild API returned non-success status."
            exit 1
          fi

